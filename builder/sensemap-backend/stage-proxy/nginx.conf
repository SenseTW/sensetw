  set_real_ip_from 0.0.0.0/0;
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  log_format h_upstream '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" "$host"'
                        'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

  server {
    listen 6060;
    access_log /var/log/nginx/access.log h_upstream;

    server_name staging.api.sense.tw;
    server_tokens off;

    root /var/www;

    location /health {
        access_log off;
        return 200;
    }

    location / {
      resolver 127.0.0.1;
      if ($http_x_forwarded_proto != "https") {
          rewrite ^(.*)$ https://$host$1 permanent;
      }
      
      set $target http://api-master.default.svc.cluster.local:8000;
      proxy_pass http://api-master.default.svc.cluster.local:8000;
      proxy_http_version 1.1;
      proxy_connect_timeout 10s;
      proxy_send_timeout 10s;
      proxy_read_timeout 10s;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Server $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Request-Start "t=${msec}";
    }
  }

  server {
    listen 6060;
    access_log /var/log/nginx/access.log h_upstream;

    server_name ~^(?<subdomain>\w+)\.staging\.api\.sense\.tw$;
    server_tokens off;

    root /var/www;

    location /health {
        access_log off;
        return 200;
    }

    location / {
      resolver 127.0.0.1;
      if ($http_x_forwarded_proto != "https") {
          rewrite ^(.*)$ https://$host$1 permanent;
      }

      proxy_pass http://api-$subdomain.default.svc.cluster.local:8000;
      proxy_http_version 1.1;
      proxy_connect_timeout 10s;
      proxy_send_timeout 10s;
      proxy_read_timeout 10s;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Server $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Request-Start "t=${msec}";
    }
  }

  server {
    listen 6060;
    server_name _;

    location /health {
        access_log off;
        return 200;
    }
  }
